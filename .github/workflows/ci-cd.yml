name: Python CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install Black
      run: pip install black
    - name: Format with Black
      run: black app/
    - name: Commit formatted changes
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add .
        git diff --quiet && git diff --staged --quiet || git commit -m "Format code with Black"
        git push

  test:
    needs: format
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        pip install -r requirements.txt pytest pytest-cov
    - name: Run tests
      run: pytest app/tests/ --cov=app --cov-report=xml
    - name: Upload coverage
      uses: codecov/codecov-action@v3

  lint:
    needs: format
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install linters
      run: pip install black flake8
    - name: Run Black check
      run: black --check app/
    - name: Run Flake8
      run: flake8 app/

  release:
    needs: [test, lint]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: pip install -r requirements.txt pyinstaller
      - name: Create executable
        run: pyinstaller --onefile app/pet_simulator.py -n pet_simulator
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: pet-simulator
          path: dist/pet_simulator
